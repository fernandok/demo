From 6f426ed0d88f1234d0e73502363b69987aa84200 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?CZ=C3=96VEK=20Andr=C3=A1s?= <czigor@freemail.hu>
Date: Tue, 7 Feb 2017 16:37:23 +0100
Subject: [PATCH 1/8] Profile selection

---
 modules/order/src/Element/ProfileSelect.php | 251 +++++++++++++++++++++++++++-
 1 file changed, 248 insertions(+), 3 deletions(-)

diff --git a/modules/order/src/Element/ProfileSelect.php b/modules/order/src/Element/ProfileSelect.php
index 3b09fb1..c7c008d 100644
--- a/modules/order/src/Element/ProfileSelect.php
+++ b/modules/order/src/Element/ProfileSelect.php
@@ -3,9 +3,13 @@
 namespace Drupal\commerce_order\Element;
 
 use Drupal\commerce\Element\CommerceElementBase;
+use Drupal\Component\Utility\Html;
+use Drupal\Component\Utility\NestedArray;
 use Drupal\Core\Entity\Entity\EntityFormDisplay;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\profile\Entity\ProfileInterface;
+use Drupal\profile\Entity\Profile;
+use Symfony\Component\HttpFoundation\Request;
 
 /**
  * Provides a form element for selecting a customer profile.
@@ -44,6 +48,9 @@ public function getInfo() {
         [$class, 'attachElementSubmit'],
         [$class, 'processForm'],
       ],
+      '#after_build' => [
+        [$class, 'afterBuild'],
+      ],
       '#element_validate' => [
         [$class, 'validateElementSubmit'],
         [$class, 'validateForm'],
@@ -84,6 +91,75 @@ public static function processForm(array $element, FormStateInterface $form_stat
     }
 
     $element['#profile'] = $element['#default_value'];
+
+    $pane_id = $element['#name'];
+    $mode = 'view';
+
+    $profile_selection_parents = $element['#parents'];
+    $profile_selection_parents[] = 'profile_selection';
+    $profile_id = $form_state->getValue($profile_selection_parents);
+    $storage = $form_state->getStorage();
+    // User is adding a new profile.
+    if ($profile_id && $profile_id == 'new_address') {
+      $mode = 'new';
+      unset($storage['pane_' . $pane_id]);
+    }
+    // If an AJAX rebuild happened, we might have our data in form state.
+    elseif (!empty($storage['pane_' . $pane_id])) {
+      $profile = $storage['pane_' . $pane_id]['profile'];
+      $mode = $storage['pane_' . $pane_id]['mode'];
+    }
+
+    $ajax_wrapper_id = Html::getUniqueId('profile-select-ajax-wrapper');
+    // Prefix and suffix used for Ajax replacement.
+    $element['#prefix'] = '<div id="' . $ajax_wrapper_id . '">';
+    $element['#suffix'] = '</div>';
+
+    // Fetch all profiles of the user.
+    $profile_uid = $element['#profile']->getOwnerId();
+    $profile_ids = \Drupal::service('entity.query')
+      ->get('profile')
+      ->condition('uid', $profile_uid)
+      ->condition('status', TRUE)
+      ->sort('profile_id', 'DESC')
+      ->execute();
+    $profiles =  Profile::loadMultiple($profile_ids);
+    $profile_options = [];
+    /** @var Profile $profile_option */
+    foreach ($profiles as $profile_option) {
+      if (!isset($default_profile_id)) {
+        $default_profile_id = $profile_option->id();
+        $default_profile = $profile_option;
+      }
+      $profile_options[$profile_option->id()] = $profile_option->label();
+    }
+    $profile_options['new_address'] = t('+ Enter a new address');
+
+    // No profile set yet. First see if one exists already.
+    if (empty($profile)) {
+      // No profiles found or user wants to create a new one. Do it.
+      if (!$profiles || $mode == 'new') {
+        $values = [
+          'type' => $element['#profile']->bundle(),
+          'uid' =>  $element['#profile']->getOwnerId(),
+        ];
+        $profile = Profile::create($values);
+        $mode = 'new';
+      }
+      // Set the latest profile as the default one.
+      else {
+        $profile = $default_profile;
+      }
+    }
+
+    // Remember the current profile and mode in form state.
+    $storage['pane_' . $pane_id] = [
+      'profile' => $profile,
+      'mode' => $mode,
+    ];
+    $form_state->setStorage($storage);
+    $element['#profile'] = $profile;
+
     $form_display = EntityFormDisplay::collectRenderDisplay($element['#profile'], 'default');
     $form_display->buildForm($element['#profile'], $element, $form_state);
     if (!empty($element['address']['widget'][0])) {
@@ -100,6 +176,86 @@ public static function processForm(array $element, FormStateInterface $form_stat
       }
     }
 
+    $called_class = get_called_class();
+    if ($profile_options && $mode != 'edit') {
+      \Drupal::moduleHandler()->alter('commerce_addressbook_labels', $profile_options, $profiles);
+
+      $element['profile_selection'] = [
+        '#title' => t('Select an address'),
+        '#options' => $profile_options,
+        '#type' => 'select',
+        '#weight' => -5,
+        '#default_value' => $default_profile_id,
+        '#ajax' => [
+          'callback' => [$called_class, 'profileSelectAjax'],
+          'wrapper' => $ajax_wrapper_id,
+        ],
+        '#element_validate' => [[$called_class, 'profileSelectValidate']],
+      ];
+    }
+
+    // Viewing a profile.
+    if ($mode == 'view') {
+      $view_builder = \Drupal::entityTypeManager()
+        ->getViewBuilder('profile');
+      $content = $view_builder->view($profile, 'default');
+
+      $element['rendered_profile'] = [
+        $content,
+      ];
+      $element['edit_button'] = [
+        '#type' => 'button',
+        '#name' => 'pane-' . $pane_id . '-edit',
+        '#value' => t('Edit'),
+        '#limit_validation_errors' => [],
+        '#ajax' => [
+          'callback' => [$called_class, 'profileSelectAjax'],
+          'wrapper' => $ajax_wrapper_id,
+        ],
+        '#element_validate' => [[$called_class, 'profileEditCancelValidate']],
+      ];
+      $element['address']['#access'] = FALSE;
+    }
+    // Add the field widgets for an existing profile.
+    elseif ($profiles && $mode == 'edit') {
+      $element['cancel_button'] = [
+        '#type' => 'button',
+        '#name' => 'pane-' . $pane_id . '-cancel',
+        '#value' => t('Return to address selection'),
+        '#limit_validation_errors' => [],
+        '#ajax' => [
+          'callback' => [$called_class, 'profileSelectAjax'],
+          'wrapper' => $ajax_wrapper_id,
+        ],
+        '#element_validate' => [[$called_class, 'profileEditCancelValidate']],
+      ];
+    }
+
+    return $element;
+  }
+
+  /**
+   * Element after_build callback.
+   *
+   * @param array $element
+   *   The form element being processed.
+   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   *   The current state of the form.
+   *
+   * @return array
+   *   The built form element.
+   */
+  public static function afterBuild(array $element, FormStateInterface $form_state) {
+    $triggering_element = $form_state->getTriggeringElement();
+    if ($triggering_element) {
+      $last_parent = array_pop($triggering_element['#parents']);
+      if ($last_parent == 'edit_button') {
+        $element['address']['#access'] = TRUE;
+        $element['edit_button']['#access'] = FALSE;
+        $element['rendered_profile']['#access'] = FALSE;
+        $element['profile_selection']['#access'] = FALSE;
+      }
+    }
     return $element;
   }
 
@@ -116,9 +272,12 @@ public static function processForm(array $element, FormStateInterface $form_stat
    *   form, as a protection against buggy behavior.
    */
   public static function validateForm(array &$element, FormStateInterface $form_state) {
-    $form_display = EntityFormDisplay::collectRenderDisplay($element['#profile'], 'default');
-    $form_display->extractFormValues($element['#profile'], $element, $form_state);
-    $form_display->validateFormValues($element['#profile'], $element, $form_state);
+    $triggering_last_parent = array_pop($form_state->getTriggeringElement()['#parents']);
+    if (!in_array($triggering_last_parent, ['edit_button', 'cancel_button'])) {
+      $form_display = EntityFormDisplay::collectRenderDisplay($element['#profile'], 'default');
+      $form_display->extractFormValues($element['#profile'], $element, $form_state);
+      $form_display->validateFormValues($element['#profile'], $element, $form_state);
+    }
   }
 
   /**
@@ -135,4 +294,90 @@ public static function submitForm(array &$element, FormStateInterface $form_stat
     $element['#profile']->save();
   }
 
+  /**
+   * Form AJAX callback.
+   *
+   * @param array $form
+   *   The complete form array.
+   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   *   The current state of the form.
+   * @param Symfony\Component\HttpFoundation\Request $request
+   *   The Request object.
+   *
+   * @return array
+   *   The form element replace the wrapper with.
+   */
+  public static function profileSelectAjax(&$form, FormStateInterface &$form_state, Request $request) {
+    $triggering_element = $form_state->getTriggeringElement();
+    array_pop($triggering_element['#array_parents']);
+    $element = NestedArray::getValue($form, $triggering_element['#array_parents']);
+    return $element;
+  }
+
+  /**
+   * The #element_validate callback for the profiles dropdown select.
+   *
+   * @param array $element
+   *   The form element.
+   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   *   The current state of the form.
+   */
+  public static function profileSelectValidate(array $element, FormStateInterface $form_state) {
+    $triggering_element = $form_state->getTriggeringElement();
+    if (in_array('profile_selection', $triggering_element['#parents']) && $triggering_element['#id'] == $element['#id']) {
+      $form = $form_state->getCompleteForm();
+      $profile_element_parents = $element['#parents'];
+      array_pop($profile_element_parents);
+      $profile_element = NestedArray::getValue($form, $profile_element_parents);
+      $pane_id = $profile_element['#name'];
+      $storage = $form_state->getStorage();
+
+      // If the user wants to enter a new address.
+      if ($element['#value'] == 'new_address') {
+        $storage['pane_' . $pane_id]['mode'] = 'new';
+        $values = [
+          'type' => $profile_element['#profile']->bundle(),
+          'uid' =>  $profile_element['#profile']->getOwnerId(),
+        ];
+        $profile = Profile::create($values);
+        $storage['pane_' . $pane_id]['profile'] = $profile;
+      }
+      else {
+        $storage['pane_' . $pane_id]['mode'] = 'view';
+        $profile_id = $form_state->getValue($element['#parents']);
+        $storage['pane_' . $pane_id]['profile'] = Profile::load($profile_id);
+      }
+      $form_state->setStorage($storage);
+    }
+  }
+
+  /**
+   * The #element_validate callback for the edit and cancel buttons.
+   *
+   * @param array $element
+   *   The form element.
+   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   *   The current state of the form.
+   */
+  public static function profileEditCancelValidate(array &$element, FormStateInterface $form_state) {
+    $triggering_element = $form_state->getTriggeringElement();
+    if ($triggering_element) {
+      $last_parent = array_pop($triggering_element['#parents']);
+      if (in_array($last_parent, ['edit_button', 'cancel_button'])) {
+        $complete_form = $form_state->getCompleteForm();
+        array_pop($element['#parents']);
+        $element = NestedArray::getValue($complete_form, $element['#parents']);
+        $pane_id = $element['#name'];
+        $storage = $form_state->getStorage();
+        if ($last_parent == 'edit_button') {
+          $storage['pane_' . $pane_id]['mode'] = 'edit';
+        }
+        else {
+          unset($storage['pane_' . $pane_id]);
+        }
+        $form_state->setStorage($storage);
+      }
+    }
+  }
+
 }

From 72bbdb9ad634f5a832777ba2e29349b6b2033951 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?CZ=C3=96VEK=20Andr=C3=A1s?= <czigor@freemail.hu>
Date: Mon, 13 Feb 2017 13:17:22 +0100
Subject: [PATCH 2/8] Fix tests

---
 modules/order/src/Element/ProfileSelect.php | 47 +++++++++++++++--------------
 1 file changed, 25 insertions(+), 22 deletions(-)

diff --git a/modules/order/src/Element/ProfileSelect.php b/modules/order/src/Element/ProfileSelect.php
index c7c008d..88d81da 100644
--- a/modules/order/src/Element/ProfileSelect.php
+++ b/modules/order/src/Element/ProfileSelect.php
@@ -115,33 +115,36 @@ public static function processForm(array $element, FormStateInterface $form_stat
     $element['#prefix'] = '<div id="' . $ajax_wrapper_id . '">';
     $element['#suffix'] = '</div>';
 
-    // Fetch all profiles of the user.
+    // Fetch all profiles of the user for an addressbook functionality.
     $profile_uid = $element['#profile']->getOwnerId();
-    $profile_ids = \Drupal::service('entity.query')
-      ->get('profile')
-      ->condition('uid', $profile_uid)
-      ->condition('status', TRUE)
-      ->sort('profile_id', 'DESC')
-      ->execute();
-    $profiles =  Profile::loadMultiple($profile_ids);
-    $profile_options = [];
-    /** @var Profile $profile_option */
-    foreach ($profiles as $profile_option) {
-      if (!isset($default_profile_id)) {
-        $default_profile_id = $profile_option->id();
-        $default_profile = $profile_option;
+    // Anonymous users don't get an addressbook.
+    if ($profile_uid) {
+      $default_profile_id = '';
+      $profile_ids = \Drupal::service('entity.query')
+        ->get('profile')
+        ->condition('uid', $profile_uid)
+        ->condition('status', TRUE)
+        ->sort('profile_id', 'DESC')
+        ->execute();
+      $profiles = Profile::loadMultiple($profile_ids);
+      $profile_options = [];
+      /** @var Profile $profile_option */
+      foreach ($profiles as $profile_option) {
+        if (empty($default_profile_id)) {
+          $default_profile_id = $profile_option->id();
+          $default_profile = $profile_option;
+        }
+        $profile_options[$profile_option->id()] = $profile_option->label();
       }
-      $profile_options[$profile_option->id()] = $profile_option->label();
+      $profile_options['new_address'] = t('+ Enter a new address');
     }
-    $profile_options['new_address'] = t('+ Enter a new address');
-
     // No profile set yet. First see if one exists already.
     if (empty($profile)) {
       // No profiles found or user wants to create a new one. Do it.
-      if (!$profiles || $mode == 'new') {
+      if (empty($profiles) || $mode == 'new') {
         $values = [
           'type' => $element['#profile']->bundle(),
-          'uid' =>  $element['#profile']->getOwnerId(),
+          'uid' => $element['#profile']->getOwnerId(),
         ];
         $profile = Profile::create($values);
         $mode = 'new';
@@ -177,7 +180,7 @@ public static function processForm(array $element, FormStateInterface $form_stat
     }
 
     $called_class = get_called_class();
-    if ($profile_options && $mode != 'edit') {
+    if (!empty($profile_uid) && $mode != 'edit' && !empty($profile_options)) {
       \Drupal::moduleHandler()->alter('commerce_addressbook_labels', $profile_options, $profiles);
 
       $element['profile_selection'] = [
@@ -307,7 +310,7 @@ public static function submitForm(array &$element, FormStateInterface $form_stat
    * @return array
    *   The form element replace the wrapper with.
    */
-  public static function profileSelectAjax(&$form, FormStateInterface &$form_state, Request $request) {
+  public static function profileSelectAjax(array &$form, FormStateInterface &$form_state, Request $request) {
     $triggering_element = $form_state->getTriggeringElement();
     array_pop($triggering_element['#array_parents']);
     $element = NestedArray::getValue($form, $triggering_element['#array_parents']);
@@ -337,7 +340,7 @@ public static function profileSelectValidate(array $element, FormStateInterface
         $storage['pane_' . $pane_id]['mode'] = 'new';
         $values = [
           'type' => $profile_element['#profile']->bundle(),
-          'uid' =>  $profile_element['#profile']->getOwnerId(),
+          'uid' => $profile_element['#profile']->getOwnerId(),
         ];
         $profile = Profile::create($values);
         $storage['pane_' . $pane_id]['profile'] = $profile;

From aa476fad099f0ce9140c272235301585fb68fb05 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?CZ=C3=96VEK=20Andr=C3=A1s?= <czigor@freemail.hu>
Date: Mon, 13 Feb 2017 18:01:42 +0100
Subject: [PATCH 3/8] Fix tests

---
 modules/order/src/Element/ProfileSelect.php | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/modules/order/src/Element/ProfileSelect.php b/modules/order/src/Element/ProfileSelect.php
index 88d81da..2aafdce 100644
--- a/modules/order/src/Element/ProfileSelect.php
+++ b/modules/order/src/Element/ProfileSelect.php
@@ -220,7 +220,7 @@ public static function processForm(array $element, FormStateInterface $form_stat
       $element['address']['#access'] = FALSE;
     }
     // Add the field widgets for an existing profile.
-    elseif ($profiles && $mode == 'edit') {
+    elseif (!empty($profiles) && $mode == 'edit') {
       $element['cancel_button'] = [
         '#type' => 'button',
         '#name' => 'pane-' . $pane_id . '-cancel',

From ae9d5318ec94420eb837ce5e1996daead3884355 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?CZ=C3=96VEK=20Andr=C3=A1s?= <czigor@freemail.hu>
Date: Mon, 20 Feb 2017 07:46:58 +0100
Subject: [PATCH 4/8] Show profiles only with the appropriate bundle

---
 modules/order/src/Element/ProfileSelect.php | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/modules/order/src/Element/ProfileSelect.php b/modules/order/src/Element/ProfileSelect.php
index 2aafdce..86e1d7d 100644
--- a/modules/order/src/Element/ProfileSelect.php
+++ b/modules/order/src/Element/ProfileSelect.php
@@ -91,7 +91,6 @@ public static function processForm(array $element, FormStateInterface $form_stat
     }
 
     $element['#profile'] = $element['#default_value'];
-
     $pane_id = $element['#name'];
     $mode = 'view';
 
@@ -99,6 +98,7 @@ public static function processForm(array $element, FormStateInterface $form_stat
     $profile_selection_parents[] = 'profile_selection';
     $profile_id = $form_state->getValue($profile_selection_parents);
     $storage = $form_state->getStorage();
+    $bundle = $element['#profile']->bundle();
     // User is adding a new profile.
     if ($profile_id && $profile_id == 'new_address') {
       $mode = 'new';
@@ -108,6 +108,7 @@ public static function processForm(array $element, FormStateInterface $form_stat
     elseif (!empty($storage['pane_' . $pane_id])) {
       $profile = $storage['pane_' . $pane_id]['profile'];
       $mode = $storage['pane_' . $pane_id]['mode'];
+      $bundle = $profile->bundle();
     }
 
     $ajax_wrapper_id = Html::getUniqueId('profile-select-ajax-wrapper');
@@ -123,6 +124,7 @@ public static function processForm(array $element, FormStateInterface $form_stat
       $profile_ids = \Drupal::service('entity.query')
         ->get('profile')
         ->condition('uid', $profile_uid)
+        ->condition('type', $bundle)
         ->condition('status', TRUE)
         ->sort('profile_id', 'DESC')
         ->execute();

From ec9b4e782e15f4c56224bf427343b5abc5680733 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?CZ=C3=96VEK=20Andr=C3=A1s?= <czigor@freemail.hu>
Date: Mon, 20 Feb 2017 15:45:07 +0100
Subject: [PATCH 5/8] Fix form with multiple profiles

---
 modules/order/src/Element/ProfileSelect.php | 33 ++++++++++++++++++-----------
 1 file changed, 21 insertions(+), 12 deletions(-)

diff --git a/modules/order/src/Element/ProfileSelect.php b/modules/order/src/Element/ProfileSelect.php
index 86e1d7d..6e1fcbc 100644
--- a/modules/order/src/Element/ProfileSelect.php
+++ b/modules/order/src/Element/ProfileSelect.php
@@ -253,7 +253,8 @@ public static function processForm(array $element, FormStateInterface $form_stat
   public static function afterBuild(array $element, FormStateInterface $form_state) {
     $triggering_element = $form_state->getTriggeringElement();
     if ($triggering_element) {
-      $last_parent = array_pop($triggering_element['#parents']);
+      $parents = $triggering_element['#parents'];
+      $last_parent = array_pop($parents);
       if ($last_parent == 'edit_button') {
         $element['address']['#access'] = TRUE;
         $element['edit_button']['#access'] = FALSE;
@@ -277,7 +278,8 @@ public static function afterBuild(array $element, FormStateInterface $form_state
    *   form, as a protection against buggy behavior.
    */
   public static function validateForm(array &$element, FormStateInterface $form_state) {
-    $triggering_last_parent = array_pop($form_state->getTriggeringElement()['#parents']);
+    $parents = $form_state->getTriggeringElement()['#parents'];
+    $triggering_last_parent = array_pop($parents);
     if (!in_array($triggering_last_parent, ['edit_button', 'cancel_button'])) {
       $form_display = EntityFormDisplay::collectRenderDisplay($element['#profile'], 'default');
       $form_display->extractFormValues($element['#profile'], $element, $form_state);
@@ -294,9 +296,13 @@ public static function validateForm(array &$element, FormStateInterface $form_st
    *   The current state of the form.
    */
   public static function submitForm(array &$element, FormStateInterface $form_state) {
-    $form_display = EntityFormDisplay::collectRenderDisplay($element['#profile'], 'default');
-    $form_display->extractFormValues($element['#profile'], $element, $form_state);
-    $element['#profile']->save();
+    $pane_id = $element['#name'];
+    $storage = $form_state->getStorage();
+    if (in_array($storage['pane_' . $pane_id]['mode'], ['new', 'edit'])) {
+      $form_display = EntityFormDisplay::collectRenderDisplay($element['#profile'], 'default');
+      $form_display->extractFormValues($element['#profile'], $element, $form_state);
+      $element['#profile']->save();
+    }
   }
 
   /**
@@ -314,8 +320,9 @@ public static function submitForm(array &$element, FormStateInterface $form_stat
    */
   public static function profileSelectAjax(array &$form, FormStateInterface &$form_state, Request $request) {
     $triggering_element = $form_state->getTriggeringElement();
-    array_pop($triggering_element['#array_parents']);
-    $element = NestedArray::getValue($form, $triggering_element['#array_parents']);
+    $array_parents = $triggering_element['#array_parents'];
+    array_pop($array_parents);
+    $element = NestedArray::getValue($form, $array_parents);
     return $element;
   }
 
@@ -329,7 +336,7 @@ public static function profileSelectAjax(array &$form, FormStateInterface &$form
    */
   public static function profileSelectValidate(array $element, FormStateInterface $form_state) {
     $triggering_element = $form_state->getTriggeringElement();
-    if (in_array('profile_selection', $triggering_element['#parents']) && $triggering_element['#id'] == $element['#id']) {
+    if (in_array('profile_selection', $triggering_element['#array_parents']) && $triggering_element['#id'] == $element['#id']) {
       $form = $form_state->getCompleteForm();
       $profile_element_parents = $element['#parents'];
       array_pop($profile_element_parents);
@@ -366,12 +373,14 @@ public static function profileSelectValidate(array $element, FormStateInterface
    */
   public static function profileEditCancelValidate(array &$element, FormStateInterface $form_state) {
     $triggering_element = $form_state->getTriggeringElement();
-    if ($triggering_element) {
-      $last_parent = array_pop($triggering_element['#parents']);
+    if ($triggering_element && $triggering_element['#id'] === $element['#id']) {
+      $array_parents = $triggering_element['#array_parents'];
+      $last_parent = array_pop($array_parents);
       if (in_array($last_parent, ['edit_button', 'cancel_button'])) {
         $complete_form = $form_state->getCompleteForm();
-        array_pop($element['#parents']);
-        $element = NestedArray::getValue($complete_form, $element['#parents']);
+        $parents = $element['#parents'];
+        array_pop($parents);
+        $element = NestedArray::getValue($complete_form, $parents);
         $pane_id = $element['#name'];
         $storage = $form_state->getStorage();
         if ($last_parent == 'edit_button') {

From f166130c64c0ad43c5bdd81caacecd1b29ade847 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?CZ=C3=96VEK=20Andr=C3=A1s?= <czigor@freemail.hu>
Date: Mon, 20 Feb 2017 16:27:25 +0100
Subject: [PATCH 6/8] Remove unneeded alter

---
 modules/order/src/Element/ProfileSelect.php | 2 --
 1 file changed, 2 deletions(-)

diff --git a/modules/order/src/Element/ProfileSelect.php b/modules/order/src/Element/ProfileSelect.php
index 6e1fcbc..47e86f1 100644
--- a/modules/order/src/Element/ProfileSelect.php
+++ b/modules/order/src/Element/ProfileSelect.php
@@ -183,8 +183,6 @@ public static function processForm(array $element, FormStateInterface $form_stat
 
     $called_class = get_called_class();
     if (!empty($profile_uid) && $mode != 'edit' && !empty($profile_options)) {
-      \Drupal::moduleHandler()->alter('commerce_addressbook_labels', $profile_options, $profiles);
-
       $element['profile_selection'] = [
         '#title' => t('Select an address'),
         '#options' => $profile_options,

From 084c045c0db07ba88e513ca6b27069d9955fa7e6 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?CZ=C3=96VEK=20Andr=C3=A1s?= <czigor@freemail.hu>
Date: Mon, 27 Feb 2017 07:47:44 +0100
Subject: [PATCH 7/8] Profile select element fixes

---
 modules/order/src/Element/ProfileSelect.php | 17 +++++++----------
 1 file changed, 7 insertions(+), 10 deletions(-)

diff --git a/modules/order/src/Element/ProfileSelect.php b/modules/order/src/Element/ProfileSelect.php
index 47e86f1..9bd4a39 100644
--- a/modules/order/src/Element/ProfileSelect.php
+++ b/modules/order/src/Element/ProfileSelect.php
@@ -130,12 +130,10 @@ public static function processForm(array $element, FormStateInterface $form_stat
         ->execute();
       $profiles = Profile::loadMultiple($profile_ids);
       $profile_options = [];
-      /** @var Profile $profile_option */
+      /** @var \Drupal\profile\Entity\Profile $profile_option */
       foreach ($profiles as $profile_option) {
-        if (empty($default_profile_id)) {
-          $default_profile_id = $profile_option->id();
-          $default_profile = $profile_option;
-        }
+        $default_profile_id = $profile_option->id();
+        $default_profile = $profile_option;
         $profile_options[$profile_option->id()] = $profile_option->label();
       }
       $profile_options['new_address'] = t('+ Enter a new address');
@@ -304,24 +302,23 @@ public static function submitForm(array &$element, FormStateInterface $form_stat
   }
 
   /**
-   * Form AJAX callback.
+   * Profile form AJAX callback.
    *
    * @param array $form
    *   The complete form array.
    * @param \Drupal\Core\Form\FormStateInterface $form_state
    *   The current state of the form.
-   * @param Symfony\Component\HttpFoundation\Request $request
+   * @param \Symfony\Component\HttpFoundation\Request $request
    *   The Request object.
    *
    * @return array
    *   The form element replace the wrapper with.
    */
-  public static function profileSelectAjax(array &$form, FormStateInterface &$form_state, Request $request) {
+  public static function profileSelectAjax(array &$form, FormStateInterface $form_state, Request $request) {
     $triggering_element = $form_state->getTriggeringElement();
     $array_parents = $triggering_element['#array_parents'];
     array_pop($array_parents);
-    $element = NestedArray::getValue($form, $array_parents);
-    return $element;
+    return NestedArray::getValue($form, $array_parents);
   }
 
   /**

From 16bacdfb0da6a62bb988e86691f20e0ba7cd4911 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?CZ=C3=96VEK=20Andr=C3=A1s?= <czigor@freemail.hu>
Date: Mon, 27 Feb 2017 17:29:13 +0100
Subject: [PATCH 8/8] Fix profile selection when using go back links

---
 modules/order/src/Element/ProfileSelect.php | 62 +++++++++++++++--------------
 1 file changed, 33 insertions(+), 29 deletions(-)

diff --git a/modules/order/src/Element/ProfileSelect.php b/modules/order/src/Element/ProfileSelect.php
index 9bd4a39..9e8aab4 100644
--- a/modules/order/src/Element/ProfileSelect.php
+++ b/modules/order/src/Element/ProfileSelect.php
@@ -90,12 +90,13 @@ public static function processForm(array $element, FormStateInterface $form_stat
       throw new \InvalidArgumentException('The commerce_profile_select #available_countries property must be an array.');
     }
 
+    //Initialize variables.
     $element['#profile'] = $element['#default_value'];
     $pane_id = $element['#name'];
     $mode = 'view';
-
     $profile_selection_parents = $element['#parents'];
     $profile_selection_parents[] = 'profile_selection';
+
     $profile_id = $form_state->getValue($profile_selection_parents);
     $storage = $form_state->getStorage();
     $bundle = $element['#profile']->bundle();
@@ -106,9 +107,16 @@ public static function processForm(array $element, FormStateInterface $form_stat
     }
     // If an AJAX rebuild happened, we might have our data in form state.
     elseif (!empty($storage['pane_' . $pane_id])) {
-      $profile = $storage['pane_' . $pane_id]['profile'];
+      $default_profile = $storage['pane_' . $pane_id]['profile'];
+      $default_profile_id = $default_profile->id();
       $mode = $storage['pane_' . $pane_id]['mode'];
-      $bundle = $profile->bundle();
+      $bundle = $default_profile->bundle();
+    }
+    // Loading the page for the first time.
+    elseif ($element['#profile']->id()) {
+      $default_profile = $element['#profile'];
+      $default_profile_id = $default_profile->id();
+      $bundle = $default_profile->bundle();
     }
 
     $ajax_wrapper_id = Html::getUniqueId('profile-select-ajax-wrapper');
@@ -120,7 +128,6 @@ public static function processForm(array $element, FormStateInterface $form_stat
     $profile_uid = $element['#profile']->getOwnerId();
     // Anonymous users don't get an addressbook.
     if ($profile_uid) {
-      $default_profile_id = '';
       $profile_ids = \Drupal::service('entity.query')
         ->get('profile')
         ->condition('uid', $profile_uid)
@@ -132,36 +139,33 @@ public static function processForm(array $element, FormStateInterface $form_stat
       $profile_options = [];
       /** @var \Drupal\profile\Entity\Profile $profile_option */
       foreach ($profiles as $profile_option) {
-        $default_profile_id = $profile_option->id();
-        $default_profile = $profile_option;
+        if (empty($default_profile_id)) {
+          $default_profile_id = $profile_option->id();
+          $default_profile = $profile_option;
+        }
         $profile_options[$profile_option->id()] = $profile_option->label();
       }
       $profile_options['new_address'] = t('+ Enter a new address');
     }
-    // No profile set yet. First see if one exists already.
-    if (empty($profile)) {
-      // No profiles found or user wants to create a new one. Do it.
-      if (empty($profiles) || $mode == 'new') {
-        $values = [
-          'type' => $element['#profile']->bundle(),
-          'uid' => $element['#profile']->getOwnerId(),
-        ];
-        $profile = Profile::create($values);
-        $mode = 'new';
-      }
-      // Set the latest profile as the default one.
-      else {
-        $profile = $default_profile;
-      }
-    }
 
     // Remember the current profile and mode in form state.
-    $storage['pane_' . $pane_id] = [
-      'profile' => $profile,
-      'mode' => $mode,
-    ];
-    $form_state->setStorage($storage);
-    $element['#profile'] = $profile;
+    if (!empty($default_profile)) {
+      $storage['pane_' . $pane_id] = [
+        'profile' => $default_profile,
+        'mode' => $mode
+      ];
+      $form_state->setStorage($storage);
+      $element['#profile'] = $default_profile;
+    }
+    // No profiles found or user wants to create a new one.
+    elseif (empty($profiles) || $mode == 'new') {
+      $values = [
+        'type' => $element['#profile']->bundle(),
+        'uid' => $element['#profile']->getOwnerId()
+      ];
+      $default_profile = Profile::create($values);
+      $mode = 'new';
+    }
 
     $form_display = EntityFormDisplay::collectRenderDisplay($element['#profile'], 'default');
     $form_display->buildForm($element['#profile'], $element, $form_state);
@@ -199,7 +203,7 @@ public static function processForm(array $element, FormStateInterface $form_stat
     if ($mode == 'view') {
       $view_builder = \Drupal::entityTypeManager()
         ->getViewBuilder('profile');
-      $content = $view_builder->view($profile, 'default');
+      $content = $view_builder->view($default_profile, 'default');
 
       $element['rendered_profile'] = [
         $content,
