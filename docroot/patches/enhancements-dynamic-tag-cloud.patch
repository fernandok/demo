diff --git a/dynamictagclouds.module b/dynamictagclouds.module
index 3e39784..821f2b1 100644
--- a/dynamictagclouds.module
+++ b/dynamictagclouds.module
@@ -7,6 +7,9 @@
 
 define('TAG_CLOUD_STYLES', 'default');
 
+/**
+ * Implements hook_theme().
+ */
 function dynamictagclouds_theme() {
   $themes = [];
   $styles = explode(',', constant('TAG_CLOUD_STYLES'));
diff --git a/src/Plugin/Block/TagCloudBlock.php b/src/Plugin/Block/TagCloudBlock.php
index b2c1f7b..1ec2a98 100644
--- a/src/Plugin/Block/TagCloudBlock.php
+++ b/src/Plugin/Block/TagCloudBlock.php
@@ -20,13 +20,13 @@ use Drupal\taxonomy\Entity\Vocabulary;
  */
 class TagCloudBlock extends BlockBase implements ContainerFactoryPluginInterface {
 
-  protected $term_storage;
-  protected $token_service;
+  protected $termstorage;
+  protected $tokenservice;
 
   public function __construct(array $configuration, $plugin_id, $plugin_definition, TermStorageInterface $term_storage, $token_service) {
     parent::__construct($configuration, $plugin_id, $plugin_definition);
-    $this->term_storage = $term_storage;
-    $this->token_service = $token_service;
+    $this->termstorage = $term_storage;
+    $this->tokenservice = $token_service;
   }
 
   public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition){
@@ -84,7 +84,7 @@ class TagCloudBlock extends BlockBase implements ContainerFactoryPluginInterface
       'recursion_limit' => 1,
     ];
 
-    $form['token'] = \Drupal::service('token.tree_builder')->buildRenderable(['term'], $token_options);
+    $form['token'] = \Drupal::service('token.tree_builder')->buildAllRenderable(['term'], $token_options);
 
     return $form;
   }
@@ -114,19 +114,35 @@ class TagCloudBlock extends BlockBase implements ContainerFactoryPluginInterface
   public function build() {
     $config = $this->getConfiguration();
 
+    $selected_bu = \Drupal::request()->get('bu');
+    $selected_div = \Drupal::request()->get('division');
+
     $vocabularies_selected = $config['vocabularies'];
     $terms = [];
     foreach ($vocabularies_selected as $vid) {
-      $vocabulary_terms = $this->term_storage->loadTree($vid);
+      $vocabulary_terms = $this->termstorage->loadTree($vid);
+      $connecting_string = \Drupal::request()->getPathInfo() . '?';
+      switch ($vid) {
+        case 'bu':
+          if (!empty($selected_div) && empty($selected_bu)) {
+            $connecting_string = \Drupal::request()->getUri() . '&';
+          }
+          break;
+
+        case 'division':
+          if (!empty($selected_bu) && empty($selected_div)) {
+            $connecting_string = \Drupal::request()->getUri() . '&';
+          }
+          break;
+      }
+      $url = $connecting_string . $vid . '=';
       foreach ($vocabulary_terms as $term) {
-        $term = $this->term_storage->load($term->tid);
-        $url = $this->token_service->replace(
-          $config['redirect_url'],
-          ['term' => $term]
-        );
-        $terms[$term->id()] = [
+        $term = $this->termstorage->load($term->tid);
+        $tid = $term->id();
+        $term_url = $url . $tid;
+        $terms[$tid] = [
           'name' => $term->getName(),
-          'url' => $url,
+          'url' => $term_url,
         ];
       }
     }
@@ -134,6 +150,7 @@ class TagCloudBlock extends BlockBase implements ContainerFactoryPluginInterface
     $style = explode(',', constant('TAG_CLOUD_STYLES'))[$config['style']];
 
     $build = [];
+    $build['#cache'] = ['max-age' => 0];
     $build['tag_cloud_block'] = [
       '#theme' => 'default_tag_clouds',
       '#tags' => $terms,
diff --git a/templates/default-tag-clouds.html.twig b/templates/default-tag-clouds.html.twig
index 8b1105a..caf29ba 100644
--- a/templates/default-tag-clouds.html.twig
+++ b/templates/default-tag-clouds.html.twig
@@ -1,7 +1,10 @@
 <ul class="default_tag_clouds">
+  <li class="tag_cloud_term">
+    <a href="/file-search">ALL</a>
+  </li>
   {% for term_id, term in tags %}
     <li class="tag_clouds_term">
-      <a href="{{ term.url }}">{{ term.name }}</a>
+      <a data-tid = "{{ term_id }}" href="{{ term.url }}">{{ term.name }}</a>
     </li>
   {% endfor %}
 </ul>
