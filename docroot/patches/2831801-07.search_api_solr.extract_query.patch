diff --git a/src/SolrConnector/SolrConnectorPluginBase.php b/src/SolrConnector/SolrConnectorPluginBase.php
index 83c7481..6b08ca4 100644
--- a/src/SolrConnector/SolrConnectorPluginBase.php
+++ b/src/SolrConnector/SolrConnectorPluginBase.php
@@ -640,6 +640,14 @@ abstract class SolrConnectorPluginBase extends ConfigurablePluginBase implements
   }
 
   /**
+   * {@inheritdoc}
+   */
+  public function getExtractQuery() {
+    $this->connect();
+    return $this->solr->createExtract();
+  }
+
+  /**
    * @return \Solarium\Plugin\CustomizeRequest\CustomizeRequest
    */
   protected function customizeRequest() {
@@ -763,6 +771,14 @@ abstract class SolrConnectorPluginBase extends ConfigurablePluginBase implements
   /**
    * {@inheritdoc}
    */
+  public function extract(QueryInterface $query) {
+    $this->connect();
+    return $this->solr->extract($query);
+  }
+
+  /**
+   * {@inheritdoc}
+   */
   public function getEndpoint($key = 'core') {
     $this->connect();
     $this->solr->createMoreLikeThis(array('handler' => 'select'));
diff --git a/src/SolrConnectorInterface.php b/src/SolrConnectorInterface.php
index 8242ef7..08e3de8 100644
--- a/src/SolrConnectorInterface.php
+++ b/src/SolrConnectorInterface.php
@@ -227,6 +227,14 @@ interface SolrConnectorInterface extends ConfigurablePluginInterface {
   public function getTermsQuery();
 
   /**
+   * Creates a new Solarium extract query.
+   *
+   * @return \Solarium\QueryType\Extract\Query
+   *   The Extract query.
+   */
+  public function getExtractQuery();
+
+  /**
    * Returns a Solarium query helper object.
    *
    * @param \Solarium\Core\Query\QueryInterface|null $query
@@ -285,6 +293,15 @@ interface SolrConnectorInterface extends ConfigurablePluginInterface {
   public function optimize(Endpoint $endpoint = NULL);
 
   /**
+   * Execute a extract query.
+   *
+   * @param \Solarium\Core\Query\QueryInterface|\Solarium\QueryType\Extract\Query $query
+   *
+   * @return \Solarium\QueryType\Extract\Result
+   */
+  public function extract(QueryInterface $query);
+
+  /**
    * Returns an endpoint.
    *
    * @param string $key
